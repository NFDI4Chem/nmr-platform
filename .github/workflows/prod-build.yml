
# This worklflow will perform following actions when the code is pushed to main branch:
# - Build the latest docker image in main.
# - Push the latest docker image to Docker Hub
# 
# Maintainers:
#   - name: Nisha Sharma
#   - email: nisha.sharma@uni-jena.de

name : Build NMR-Platform image

on:
  push:
    branches: [zero-downtime-deployment]

env:
  REPOSITORY_NAME: nmr-platform
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  REPOSITORY_NAMESPACE: nfdi4chem

jobs:
  setup-build-publish-deploy-dev:
    name: Build & Push Image to Docker Hub
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
    # Checkout code
    - name: Checkout
      uses: actions/checkout@v4

    # Set up Docker Buildx for multi-platform builds
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Login to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_HUB_USERNAME  }}
        password: ${{ env.DOCKER_HUB_PASSWORD  }}

    # Debug: Check if deployment files exist
    - name: Check deployment files
      run: |
        echo "Checking deployment files..."
        ls -la deployment/
        echo "Checking start-container script..."
        ls -la deployment/start-container
        echo "Checking COMPOSER_AUTH secret..."
        if [ -n "$COMPOSER_AUTH" ]; then
          echo "COMPOSER_AUTH is set (length: ${#COMPOSER_AUTH})"
        else
          echo "COMPOSER_AUTH is empty or not set"
        fi
      env:
        COMPOSER_AUTH: ${{ secrets.COMPOSER_AUTH }}

    - name: Build and push App Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./deployment/Dockerfile
        push: true
        build-args: |
          WWWUSER=1000
          WWWGROUP=1000
          TZ=UTC
          APP_DIR=/var/www/html
          PHP_VERSION=8.3
          FRANKENPHP_VERSION=latest
          COMPOSER_VERSION=latest
          NODE_VERSION=18
          COMPOSER_AUTH=${{ secrets.COMPOSER_AUTH }}
        tags: ${{ env.REPOSITORY_NAMESPACE }}/${{ env.REPOSITORY_NAME }}:latest
        
    # Debug: Test the built image
    - name: Test built image
      run: |
        echo "Testing if start-container exists in built image..."
        docker run --rm ${{ env.REPOSITORY_NAMESPACE }}/${{ env.REPOSITORY_NAME }}:latest ls -la /usr/local/bin/start-container || echo "start-container not found!"
        echo "Testing if vendor/autoload.php exists..."
        docker run --rm ${{ env.REPOSITORY_NAMESPACE }}/${{ env.REPOSITORY_NAME }}:latest ls -la /var/www/html/vendor/autoload.php || echo "vendor/autoload.php not found!"